#@description A list of MC step hit processors for SuperNEMO demonstrator (visu & validation & debug)
#@key_label  "name"
#@meta_label "type"

[name="calorimeter.visu.hit_processor" type="mctools::push_all_step_hit_processor"]
  #@config The step hit processor for collecting the 'calorimeter' simulated hits
  # The truth hits collected from the 'calorimeter' blocks by the 'calorimeter_SD'
  # sensitive detector are pushed without modification in the '__visu.tracks'
  # collection. The configuration of the 'calorimeter_SD' sensitive detector
  # is provided in the 'detector_construction' section of the main Geant4 manager
  # configuration.
  logging.priority   : string  = "error"
  sensitive.category : string  = "calorimeter_SD"
  hit.category       : string  = "__visu.tracks"
  output_profiles.matching : string[2]  = "calo_details" "all_details"

# Add: 2023-12-12, FM
[name="calorimeter_front_film.visu.hit_processor" type="mctools::push_all_step_hit_processor"]
  #@config The step hit processor for collecting any true hit in the 'nylon' or 'mylar' materials
  # Here we create a non-official sensitive detector named '__calorimeter_film_SD'.
  # It is associated to all volumes filled with the 'nylon' or 'mylar' materials.
  # The truth hits collected from these volumes by the '__calorimeter_film_SD'
  # sensitive detector are pushed without modification in the '__visu.tracks'
  # collection. Here we also define some additional parameters to configure the
  # behaviour of this sensitive detector.
  logging.priority   : string  = "error"
  sensitive.category : string  = "__calorimeter_film_SD"
  hit.category       : string  = "__visu.tracks"
  geometry.volumes.names : string[3] = \
    "calorimeter_scin_block_front_wrapper_front_wrapping.model.log" \
    "calorimeter_scin_block_front_wrapper_front_stock.model.log" \
    "calorimeter_scin_block_front_wrapper_front_wrapping.model"
  sensitive.record_momentum                  : boolean = true
  sensitive.record_track_id                  : boolean = true
  sensitive.record_sensitive_category        : boolean = true
  sensitive.record_material                  : boolean = true
  sensitive.record_creator_process           : boolean = true
  sensitive.record_boundaries                : boolean = true
  sensitive.record_primary_particle          : boolean = true
  output_profiles.matching : string[2] = "calo_details" "all_details"


[name="xcalorimeter.visu.hit_processor" type="mctools::push_all_step_hit_processor"]
  #@config The step hit processor for collecting the 'xcalorimeter' simulated hits
  # The truth hits collected from the 'X-calorimeter' blocks by the 'xcalorimeter_SD'
  # sensitive detector are pushed without modification in the '__visu.tracks'
  # collection. The configuration of the 'xcalorimeter_SD' sensitive detector
  # is provided in the 'detector_construction' section of the main Geant4 manager
  # configuration.
  logging.priority   : string  = "error"
  sensitive.category : string  = "xcalorimeter_SD"
  hit.category       : string  = "__visu.tracks"
  output_profiles.matching : string[2] = "calo_details" "all_details"


# Add: 2023-12-12, FM
[name="xcalorimeter_front_film.visu.hit_processor" type="mctools::push_all_step_hit_processor"]
  #@config The step hit processor for collecting any true hit in the 'nylon' or 'mylar' materials
  # Here we create a non-official sensitive detector named '__calorimeter_film_SD'.
  # It is associated to all volumes filled with the 'nylon' or 'mylar' materials.
  # The truth hits collected from these volumes by the '__calorimeter_film_SD'
  # sensitive detector are pushed without modification in the '__visu.tracks'
  # collection. Here we also define some additional parameters to configure the
  # behaviour of this sensitive detector.
  logging.priority   : string  = "error"
  sensitive.category : string  = "__xcalorimeter_film_SD"
  hit.category       : string  = "__visu.tracks"
  geometry.volumes.names : string[1] = \
    "xwall_scin_front_wrapper.model.log" 
   sensitive.record_momentum                  : boolean = true
  sensitive.record_track_id                  : boolean = true
  sensitive.record_sensitive_category        : boolean = true
  sensitive.record_material                  : boolean = true
  sensitive.record_creator_process           : boolean = true
  sensitive.record_boundaries                : boolean = true
  sensitive.record_primary_particle          : boolean = true
  output_profiles.matching : string[2] = "calo_details" "all_details"


[name="gveto.visu.hit_processor" type="mctools::push_all_step_hit_processor"]
  #@config The step hit processor for collecting the 'gamma veto' simulated hits
  # The truth hits collected from the 'gamma-veto' blocks by the 'gveto_SD'
  # sensitive detector are pushed without modification in the '__visu.tracks'
  # collection. The configuration of the 'gveto_SD' sensitive detector
  # is provided in the 'detector_construction' section of the main Geant4 manager
  # configuration.
  logging.priority   : string  = "error"
  sensitive.category : string  = "gveto_SD"
  hit.category       : string  = "__visu.tracks"
  output_profiles.matching : string[2] = "calo_details" "all_details"


[name="tracker.visu.hit_processor" type="mctools::push_all_step_hit_processor"]
  #@config The step hit processor for collecting the 'tracker' simulated hits
  # The truth hits collected from the 'drift cell' volumes by the 'tracker_SD'
  # sensitive detector are pushed without modification in the '__visu.tracks'
  # collection. The configuration of the 'tracker_SD' sensitive detector
  # is provided in the 'detector_construction' section of the main Geant4 manager
  # configuration.
  logging.priority   : string  = "error"
  sensitive.category : string  = "tracker_SD"
  hit.category       : string  = "__visu.tracks"
  output_profiles.matching : string[2] = "tracker_details" "all_details"


[name="tracking_gas.visu.hit_processor" type="mctools::push_all_step_hit_processor"]
  #@config The step hit processor for collecting any true hit in the 'tracking gas' materials
  # Here we create a non-official sensitive detector named '__tracking_gas_SD'.
  # It is associated to all volumes filled with the 'tracking_gas' material.
  # The truth hits collected from these volumes by the '__tracking_gas_SD'
  # sensitive detector are pushed without modification in the '__visu.tracks'
  # collection. Here we also define some additional parameters to configure the
  # behaviour of this sensitive detector.
  logging.priority   : string  = "error"
  sensitive.category : string  = "__tracking_gas_SD"
  hit.category       : string  = "__visu.tracks"
  geometry.volumes.with_materials : string[1] = "tracking_gas" 
  sensitive.record_momentum                  : boolean = true
  sensitive.record_track_id                  : boolean = true
  sensitive.record_sensitive_category        : boolean = true
  sensitive.record_material                  : boolean = true
  sensitive.record_creator_process           : boolean = true
  sensitive.record_boundaries                : boolean = true
  sensitive.record_primary_particle          : boolean = true
  output_profiles.matching : string[2] = "tracker_details" "all_details"


[name="source.visu.hit_processor" type="mctools::push_all_step_hit_processor"]
  #@config The step hit processor for collecting the simulated hits within the source foils
  # Here we create a non-official sensitive detector named '__source_SD'.
  # It is associated to a list of logical volumes addressed by their names.
  # The truth hits collected from these volumes by the '__source_SD'
  # sensitive detector are pushed without modification in the '__visu.tracks'
  # collection. Here we also define some additional parameters to configure the
  # behaviour of this sensitive detector.
  logging.priority   : string  = "error"
  sensitive.category : string  = "__source_SD"
  hit.category       : string  = "__visu.tracks"

  # Depending on the activated variant, one may need to override/append actions for some
  # configuration parameters. From Bayeux 3.5.4, the '+=' array property append operator
  # works even if the property has not been defined previously. 
  #@allow_key_override
  
  #@variant_if geometry:layout/if_basic/source_layout/if_basic|true
  geometry.volumes.with_materials : string[1] += "bb_source_material.basic"
  geometry.volumes.names   : string[6] += \
    "source_external_film.basic.model.log" \
    "source_internal_film.basic.model.log" \
    "source_external_multipad.basic.model.log" \
    "source_internal_multipad.basic.model.log" \
    "source_internal_strip.basic.model.log" \
    "source_external_strip.basic.model.log"
  #@variant_endif geometry:layout/if_basic/source_layout/if_basic
  
  #@variant_if geometry:layout/if_basic/source_layout/if_realistic_flat|false
  geometry.volumes.names : string[3] += \
    "short_film.realistic.model.log" \
    "source_film.realistic.model.log" \
    "snemo_strip_wrapper_film.realistic.flat.model.log"
  geometry.volumes.regex : string[5] += \
    "snemo_foil_(.*)_pad_(.*).model.log" \
    "snemo_source_(.*).model.log" \
    "snemo_strip_(.*).model.log" \
    "snemo_strip_(.*)_pad_(.*).realistic.model.log" \
    "snemo_strip_(.*)_pad_(.*).flat.model.log" 	
  #@variant_endif geometry:layout/if_basic/source_layout/if_realistic_flat
  
  #@variant_if geometry:layout/if_basic/source_layout/if_realistic_snrs1|false
  geometry.volumes.names : string[3] += \
    "short_film.realistic.model.log" \
    "source_film.realistic.model.log" \
    "snemo_strip_wrapper_film.realistic.flat.model.log"
  geometry.volumes.regex : string[7] += \
    "snemo_foil_(.*)_pad_(.*).model.log" \
    "snemo_source_(.*).model.log" \
    "snemo_strip_(.*)_pad_(.*).realistic.model.log" \
    "snemo_strip_(.*)_pad_(.*).flat.model.log" \
    "snemo_strip_(.*)_pad_(.*).snrs1.source.model.log" \
    "snemo_strip_(.*)_pad_(.*).snrs1.back_film.model.log" \
    "snemo_strip_(.*)_pad_(.*).snrs1.front_film.model.log"
  #@variant_endif geometry:layout/if_basic/source_layout/if_realistic_snrs1

  #@variant_if geometry:layout/if_basic/source_calibration/is_active/type/if_sds|false
  geometry.volumes.names : string[4] += \
     "source_calibration_spot.model.log" \
     "source_calibration_envelope.model.log" \
     "source_calibration_carrier_frame.model.log" \
     "source_calibration_carrier.model.log" 
  geometry.volumes.regex : string[1] += \
     "source_calibration_track_(.*).model.log"
  #@variant_endif geometry:layout/if_basic/source_calibration/is_active/type/if_sds
  
  sensitive.record_momentum                  : boolean = true
  sensitive.record_track_id                  : boolean = true
  sensitive.record_sensitive_category        : boolean = true
  sensitive.record_material                  : boolean = true
  sensitive.record_creator_process           : boolean = true
  sensitive.record_boundaries                : boolean = true
  sensitive.record_primary_particle          : boolean = true
  output_profiles.matching : string[2] = "source_details" "all_details"

